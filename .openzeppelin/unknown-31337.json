{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9d4454B023096f34B160D6B654540c56A1F81688",
    "txHash": "0x86f8bc2204ee78343730c01b9acd0cab03127ee702749e0a72256eb4dab8bbad",
    "deployTransaction": {
      "hash": "0x86f8bc2204ee78343730c01b9acd0cab03127ee702749e0a72256eb4dab8bbad",
      "type": 0,
      "accessList": null,
      "blockHash": "0xaf2873aeceea4dfec206d6fd13940a55b6f8cb1adafbc889e86ee590fe50a879",
      "blockNumber": 12787006,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x01dcd65000"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 45,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x583355afec1dda67d13d188d6906a630c79fd7211c79b4c90c0e523ba9063181",
      "s": "0x1f2291f0a931b8f76ed57ba5029a61eb023b77ce67e73b1e3b40cdff79771a94",
      "v": 62710,
      "creates": "0x9d4454B023096f34B160D6B654540c56A1F81688",
      "chainId": 31337
    }
  },
  "proxies": [
    {
      "address": "0xc351628EB244ec633d5f21fBD6621e1a683B1181",
      "txHash": "0x1c4794739a0680c8b5c2d8860ef27e33d673f3ead7d3204ee37f096eb0012c4c",
      "kind": "transparent"
    },
    {
      "address": "0x162A433068F51e18b7d13932F27e66a3f99E6890",
      "txHash": "0x898c01dbf61fa3f595551428f65bd1e2608036bd1412cf63806781f2e4525b4c",
      "kind": "transparent"
    },
    {
      "address": "0xB0D4afd8879eD9F52b28595d31B441D079B2Ca07",
      "txHash": "0xbcca2e4013af2494686b276d095e2c62a64c97f47d38e9a90c6ba8405407c910",
      "kind": "transparent"
    },
    {
      "address": "0x5eb3Bc0a489C5A8288765d2336659EbCA68FCd00",
      "txHash": "0xd708552de96fbb453939475a3a4d63aac9432eb64b60dd4f97c20a7b71d0beed",
      "kind": "transparent"
    }
  ],
  "impls": {
    "52bebd89101ba7c6fdb24d6646723306a6cc6bdddc03e516097efa928cfa3f9b": {
      "address": "0x8f86403A4DE0BB5791fa46B8e795C547942fE4Cf",
      "txHash": "0x4ffeede0d0f84a202678eb9230cb0d744cf0a1366dd5d3d2e42375e4838d0851",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "libs/BaseRelayRecipient.sol:15"
          },
          {
            "contract": "EarnVault",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)959",
            "src": "contracts/vaults/EarnVault.sol:39"
          },
          {
            "contract": "EarnVault",
            "label": "percKeepInVault",
            "type": "t_uint256",
            "src": "contracts/vaults/EarnVault.sol:40"
          },
          {
            "contract": "EarnVault",
            "label": "strategy",
            "type": "t_contract(IStrategy)5521",
            "src": "contracts/vaults/EarnVault.sol:41"
          },
          {
            "contract": "EarnVault",
            "label": "curveZap",
            "type": "t_contract(ICurveZap)5541",
            "src": "contracts/vaults/EarnVault.sol:42"
          },
          {
            "contract": "EarnVault",
            "label": "admin",
            "type": "t_address",
            "src": "contracts/vaults/EarnVault.sol:43"
          },
          {
            "contract": "EarnVault",
            "label": "daoMine",
            "type": "t_contract(IDAOmine)5551",
            "src": "contracts/vaults/EarnVault.sol:47"
          },
          {
            "contract": "EarnVault",
            "label": "daoMinePid",
            "type": "t_uint256",
            "src": "contracts/vaults/EarnVault.sol:48"
          },
          {
            "contract": "EarnVault",
            "label": "networkFeeTier2",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/vaults/EarnVault.sol:51"
          },
          {
            "contract": "EarnVault",
            "label": "customNetworkFeeTier",
            "type": "t_uint256",
            "src": "contracts/vaults/EarnVault.sol:52"
          },
          {
            "contract": "EarnVault",
            "label": "networkFeePerc",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/vaults/EarnVault.sol:53"
          },
          {
            "contract": "EarnVault",
            "label": "customNetworkFeePerc",
            "type": "t_uint256",
            "src": "contracts/vaults/EarnVault.sol:54"
          },
          {
            "contract": "EarnVault",
            "label": "_fees",
            "type": "t_uint256",
            "src": "contracts/vaults/EarnVault.sol:55"
          },
          {
            "contract": "EarnVault",
            "label": "treasuryWallet",
            "type": "t_address",
            "src": "contracts/vaults/EarnVault.sol:58"
          },
          {
            "contract": "EarnVault",
            "label": "communityWallet",
            "type": "t_address",
            "src": "contracts/vaults/EarnVault.sol:59"
          },
          {
            "contract": "EarnVault",
            "label": "strategist",
            "type": "t_address",
            "src": "contracts/vaults/EarnVault.sol:60"
          },
          {
            "contract": "EarnVault",
            "label": "depositTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/vaults/EarnVault.sol:63"
          },
          {
            "contract": "EarnVault",
            "label": "pendingStrategy",
            "type": "t_address",
            "src": "contracts/vaults/EarnVault.sol:66"
          },
          {
            "contract": "EarnVault",
            "label": "canSetPendingStrategy",
            "type": "t_bool",
            "src": "contracts/vaults/EarnVault.sol:67"
          },
          {
            "contract": "EarnVault",
            "label": "unlockTime",
            "type": "t_uint256",
            "src": "contracts/vaults/EarnVault.sol:68"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)959": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IStrategy)5521": {
            "label": "contract IStrategy"
          },
          "t_contract(ICurveZap)5541": {
            "label": "contract ICurveZap"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IDAOmine)5551": {
            "label": "contract IDAOmine"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
